#!/usr/bin/env node

/*jshint node:true, strict:false*/
var input_js = '';
var escope = require('escope');
var esprima = require('esprima');

var scopes = [];

process.stdin.resume();
process.stdin.setEncoding('utf8');

process.stdin.on('data', function(chunk) {
    input_js += chunk;
});

process.stdin.on('end', function() {
    var ast = esprima.parse(input_js, {
        range: true
    });
    var scopeManager = escope.analyze(ast, {
            optimistic: true,
            ignoreEval: true,
            ecmaVersion: 6
    }); 
    var toplevel = scopeManager.acquire(ast);

    //console.log(toplevel);

    //an array of arrays of variables
    //indexed by level they are defined in
    var variables = [];

    function setLevel(scope, level) {

            var enclosed = {};

            scope.level = level;

            scope.through.forEach(function (ref) {
                    if (ref.resolved) {
                        enclosed[ref.identifier.name] = ref.resolved.scope.level;
                    } else {
                        enclosed[ref.identifier.name] = 0;
                    }
            });           
            scopes.push([level, scope.block.range[0], scope.block.range[1], enclosed]);

            
            if (scope.childScopes.length) {
                    scope.childScopes.forEach(function (s) {
                            setLevel(s, level + 1);
                    });
            }

    }

    setLevel(toplevel, 0)

        process.stdout.write(JSON.stringify({
                scopes: scopes
        }));
});

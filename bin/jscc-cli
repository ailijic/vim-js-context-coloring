#!/usr/bin/env node

/*jshint node:true, strict:false*/
var input_js = '';
var UglifyJS = require("../node_modules/uglify-js/tools/node.js");
var scopes = [];

process.stdin.resume();
process.stdin.setEncoding('utf8');

process.stdin.on('data', function(chunk) {
    input_js += chunk;
});

process.stdin.on('end', function() {
        var toplevel = UglifyJS.parse(input_js);
        toplevel.figure_out_scope();


        var walker = new UglifyJS.TreeWalker(function(node){

                var level, def, scope;

                if (node instanceof UglifyJS.AST_Scope) {

                        //annotate Scope Nodes with level info
                        if (node.level === undefined) {
                                node.level = node.parent_scope ? node.parent_scope.level + 1 : 0;
                                var enclosed = {};
                                node.enclosed.forEach(function(v) {
                                        enclosed[v.name] = v.scope.level
                                        });

                                scope = [node.level, node.start.pos, node.end.endpos, enclosed];

                                //add named function definitions
                                if (node instanceof UglifyJS.AST_Defun) {
                                     scope.push(node.name.name);//] = node.parent_scope.level;
                                }

                                scopes.push(scope);
                        }


                }
        });
        toplevel.walk(walker);

        process.stdout.write(JSON.stringify({
                scopes: scopes
        }));
});
